name: Building & Testing
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-build
  cancel-in-progress: true

on:
  workflow_call:
  push:
    branches: [master]
    paths:
      - "**"
      - "!**.md"

  pull_request:
    branches: [master]
    paths:
      - "**"
      - "!**.md"

jobs:
  build-all-meson:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04,ubuntu-24.04-arm] #[ubuntu-24.04, ubuntu-24.04-arm, macos-14, windows-latest] 
    runs-on: ${{ matrix.os }}
    timeout-minutes: 8
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          python3 -m pip install meson ninja
      - name: Configure and build
        run: |
          source .venv/bin/activate
          meson setup build/ --native-file=platforms/gcc-14.ini
          meson compile -C build/ 
          meson test -C build/ --suite=vs-xml
      - name: Archive production artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-meson-logs
          path: |
            build/meson-logs/**/*
  build-cmake:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04,ubuntu-24.04-arm] #[ubuntu-24.04, ubuntu-24.04-arm, macos-14, windows-latest] 
    runs-on: ${{ matrix.os }}
    timeout-minutes: 8
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          python3 -m pip install cmake
      - name: Configure and build
        run: |
          source .venv/bin/activate
          mkdir build
          cd build
          CXX=g++-14 CC=gcc-14 cmake ..
          make all -j